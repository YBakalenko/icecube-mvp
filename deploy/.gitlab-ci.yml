default:
  image: alpine:latest
  hooks:
    pre_get_sources_script:
      - echo "$CI_GITLAB_IP $CI_GITLAB_HOST" | tee -a /etc/hosts

before_script:
  - echo $CI_PIPELINE_SOURCE

stages:
  - test
  - staging
  - production

test:
  stage: test
  script:
    - exit 0
  rules:
    - if: $CI_PIPELINE_SOURCE == "trigger"
    - if: $CI_COMMIT_BRANCH

staging:
  stage: staging
  variables:
    CI_REGISTRY: 'index.docker.io'
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY/$CI_PROJECT_PATH
    CI_APPLICATION_TAG: $CI_COMMIT_REF_SLUG
    CI_CONTAINER_NAME: ci_job_build_${CI_JOB_ID}
    # host: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
    KUBE_NAMESPACE: staging
  environment:
    name: staging
    url: http://staging
  before_script:
    # installing dependencies
    - apk add -U openssl curl tar gzip bash ca-certificates git
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.35-r1/glibc-2.35-r1.apk
    - apk add glibc-2.35-r1.apk
    - rm glibc-2.35-r1.apk
    - curl https://get.helm.sh/helm-v3.15.2-linux-amd64.tar.gz | tar zx
    - mv linux-amd64/helm /usr/bin/
    - helm version --client
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x /usr/bin/kubectl
    - kubectl version --client
    # ensure_namespace
    - kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
  script:
    # deploy
    - echo $KUBE_NAMESPACE
    - export track="${1-stable}"
    - export name="$CI_ENVIRONMENT_SLUG"
    - helm repo add stable https://charts.helm.sh/stable
    - helm dep build icecube
    - >
      helm upgrade \
        --install \
        --wait \
        --set frontend.ingress.host="$host" \
        --set frontend.image.tag="$(curl -k https://$CI_GITLAB_HOST/$CI_PROJECT_NAMESPACE/frontend/raw/$CI_DEFAULT_BRANCH/VERSION)" \
        --set train.image.tag="$(curl -k https://$CI_GITLAB_HOST/$CI_PROJECT_NAMESPACE/train/raw/$CI_DEFAULT_BRANCH/VERSION)" \
        --set predict.image.tag="$(curl -k https://$CI_GITLAB_HOST/$CI_PROJECT_NAMESPACE/predict/raw/$CI_DEFAULT_BRANCH/VERSION)" \
        --namespace="$KUBE_NAMESPACE" \
        --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
        "$name" \
        icecube \
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH #&& $CI_KUBERNETES_ACTIVE == 'true' (with Premium)

production:
  stage: production
  variables:
    CI_REGISTRY: 'index.docker.io'
    CI_APPLICATION_REPOSITORY: $CI_REGISTRY/$CI_PROJECT_PATH
    CI_APPLICATION_TAG: $CI_COMMIT_REF_SLUG
    CI_CONTAINER_NAME: ci_job_build_${CI_JOB_ID}
    # host: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
    KUBE_NAMESPACE: production
  environment:
    name: production
    url: http://production
  before_script:
    # installing dependencies
    - apk add -U openssl curl tar gzip bash ca-certificates git
    - wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub
    - wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.35-r1/glibc-2.35-r1.apk
    - apk add glibc-2.35-r1.apk
    - rm glibc-2.35-r1.apk
    - curl https://get.helm.sh/helm-v3.15.2-linux-amd64.tar.gz | tar zx
    - mv linux-amd64/helm /usr/bin/
    - helm version --client
    - curl -L -o /usr/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    - chmod +x /usr/bin/kubectl
    - kubectl version --client
    # ensure_namespace
    - kubectl describe namespace "$KUBE_NAMESPACE" || kubectl create namespace "$KUBE_NAMESPACE"
  script:
    # deploy
    - echo $KUBE_NAMESPACE
    - export track="${1-stable}"
    - export name="$CI_ENVIRONMENT_SLUG"
    - helm repo add stable https://charts.helm.sh/stable
    - helm dep build icecube
    - >
      helm upgrade \
        --install \
        --wait \
        --set frontend.ingress.host="$host" \
        --set frontend.image.tag="$(curl -k https://$CI_GITLAB_HOST/$CI_PROJECT_NAMESPACE/frontend/raw/$CI_DEFAULT_BRANCH/VERSION)" \
        --set train.image.tag="$(curl -k https://$CI_GITLAB_HOST/$CI_PROJECT_NAMESPACE/train/raw/$CI_DEFAULT_BRANCH/VERSION)" \
        --set predict.image.tag="$(curl -k https://$CI_GITLAB_HOST/$CI_PROJECT_NAMESPACE/predict/raw/$CI_DEFAULT_BRANCH/VERSION)" \
        --namespace="$KUBE_NAMESPACE" \
        --version="$CI_PIPELINE_ID-$CI_JOB_ID" \
        "$name" \
        icecube \
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH #&& $CI_KUBERNETES_ACTIVE == 'true' (with Premium)
